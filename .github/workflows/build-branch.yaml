name: Build Branch

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    run-super-linter:
        name: Run GitHub Super Linter
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - name: Lint Code Base
              uses: github/super-linter@v4
              env:
                  DEFAULT_BRANCH: main
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  VALIDATE_ALL_CODEBASE: "true"
                  VALIDATE_GO: "false"

    run-golangci-lint:
        name: Run GoLangCI Lint
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - uses: actions/setup-go@v2
              with:
                  go-version: "^1.18"
            - name: Install Dependencies
              run: |
                  go get ./...
                  go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.44.2
            - name: Lint Go Code
              run: |
                golangci-lint run -c .github/linters/.golangci.yml

    run-codeql-analysis:
        name: Run CodeQL Analysis
        runs-on: ubuntu-latest
        permissions:
            actions: read
            contents: read
            security-events: write
        strategy:
            fail-fast: false
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
            - name: Initialize CodeQL
              uses: github/codeql-action/init@v1
              with:
                  languages: go
            - name: Autobuild
              uses: github/codeql-action/autobuild@v1
            - name: Perform CodeQL Analysis
              uses: github/codeql-action/analyze@v1

    build:
        name: Build
        runs-on: ubuntu-latest
        needs:
            - run-super-linter
            - run-golangci-lint
            - run-codeql-analysis
        permissions:
            packages: write
        steps:
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v1
            - name: Set up Docker Buildx
              id: buildx
              uses: docker/setup-buildx-action@v1
              with:
                  install: true
            - name: Available platforms
              run: echo ${{ steps.buildx.outputs.platforms }}
            - name: Login to the Container registry
              uses: docker/login-action@v1
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - name: Build & Push Docker Image
              uses: docker/build-push-action@v2
              with:
                  platforms: linux/amd64,linux/arm64,linux/arm/v7
                  push: true
                  tags: ghcr.io/nadundesilva/k8s-replicator:latest
