name: Publish Release

on:
    push:
        tags:
            - v*

jobs:
    publish-release:
        name: Publish Release
        runs-on: ubuntu-latest
        steps:
            - name: Generate Version
              run: |
                TAG_VERSION="$(echo -n "${{ github.ref_name }}" | cut -c2-)"
                MAJOR="$(echo -n "${TAG_VERSION}" | cut -d "." -f1)"
                MINOR="$(echo -n "${TAG_VERSION}" | cut -d "." -f2)"
                PATCH="$(echo -n "${TAG_VERSION}" | cut -d "." -f3)"

                echo "RELEASE_VERSION=${MAJOR}.${MINOR}.${PATCH}" >> "${GITHUB_ENV}"
                echo "RELEASE_MINOR_VERSION=${MAJOR}.${MINOR}" >> "${GITHUB_ENV}"

                echo "Release Version: ${RELEASE_VERSION}"
                echo "Release Minor Version: ${RELEASE_MINOR_VERSION}"
            - name: Checkout repository
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - name: Setup GoLang
              uses: actions/setup-go@v2
              with:
                  go-version: "^1.18"
            - name: Building Controller
              run: make all
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v1
            - name: Set up Docker Buildx
              id: buildx
              uses: docker/setup-buildx-action@v1
              with:
                  install: true
            - name: Available platforms
              run: echo ${{ steps.buildx.outputs.platforms }}
            - name: Login to the Container registry
              uses: docker/login-action@v1
              with:
                  username: nadunrds
                  password: ${{ secrets.DOCKER_HUB_TOKEN }}
            - name: Build Docker Image for scanning
              uses: docker/build-push-action@v2
              with:
                  context: .
                  load: true
                  tags: nadunrds/k8s-replicator:${{ github.sha }}
            - name: Run Trivy vulnerability scanner
              uses: aquasecurity/trivy-action@master
              with:
                  image-ref: nadunrds/k8s-replicator:${{ github.sha }}
                  format: 'table'
                  exit-code: '1'
                  ignore-unfixed: true
            - name: Run E2E Tests
              run: make test.e2e
              env:
                  CONTROLLER_IMAGE: nadunrds/k8s-replicator:${{ github.sha }}
            - name: Build & Push Docker Image
              uses: docker/build-push-action@v2
              with:
                  context: .
                  platforms: linux/amd64,linux/arm64,linux/arm/v7
                  push: ${{ github.repository_owner == 'nadundesilva' }}
                  tags: |
                    nadunrds/k8s-replicator:${{ env.RELEASE_VERSION }}
                    nadunrds/k8s-replicator:latest
            - name: Create Release
              id: create-release
              uses: actions/create-release@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                tag_name: ${{ github.ref }}
                release_name: Kubernetes Replicator ${{ github.ref_name }}
                body_path: .github/RELEASE_NOTE.md
                draft: false
                prerelease: false
            - name: Create deployment artifacts zip
              run: |
                zip k8s-replicator ./kustomize/**
            - name: Upload Release Asset
              uses: actions/upload-release-asset@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                upload_url: ${{ steps.create-release.outputs.upload_url }}
                asset_path: ./k8s-replicator.zip
                asset_name: k8s-replicator-${{ github.ref_name }}.zip
                asset_content_type: application/zip
