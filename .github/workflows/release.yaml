name: Release

on:
  workflow_dispatch:
    inputs:
      release-version:
        description: Release Version (Eg:- 1.0.0)
        required: true
        type: string

permissions:
  contents: read
  actions: read
  security-events: write
  checks: write

jobs:
  build:
    name: Build Release Artifacts
    uses: ./.github/workflows/build.yaml
    with:
      version: ${{ github.event.inputs.release-version }}
      publish-artifacts: true
      update-latest-tag: true
    secrets:
      docker-hub-token: ${{ secrets.DOCKER_HUB_TOKEN }}

  create-github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      contents: write
    steps:
      - name: Preparing Git CLI
        run: |
          git config --global user.name "${GIT_USER_NAME}"
          git config --global user.email nadunrds@gmail.com
        env:
          GIT_USER_NAME: ${{ github.actor }}
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0
          persist-credentials: false
      - uses: actions/download-artifact@v5
        with:
          artifact-ids: benchmark-artifacts
      - name: Commit Release Files
        run: |
          rm -f BENCHMARK.md
          cp test/benchmark/report.md BENCHMARK.md
          git add BENCHMARK.md

          git commit -m "[Automated] Preparing for Release v${ARTIFACTS_VERSION}"
        env:
          ARTIFACTS_VERSION: ${{ github.event.inputs.release-version }}
      - name: Create Release Tag
        run: |
          GITHUB_TAG="v${ARTIFACTS_VERSION}"
          git tag "${GITHUB_TAG}"
          git push origin "v${GITHUB_TAG}"
        env:
          ARTIFACTS_VERSION: ${{ github.event.inputs.release-version }}
      - name: Prepare Release Note
        run: |
          sed -i "s/{{VERSION_TAG}}/v${ARTIFACTS_VERSION}/g" .github/RELEASE_NOTE
        env:
          ARTIFACTS_VERSION: ${{ github.event.inputs.release-version }}
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.release-version }}
          release_name: Kubernetes Replicator v${{ github.event.inputs.release-version }}
          body_path: .github/RELEASE_NOTE
          draft: false
          prerelease: false
      - name: Prepare for next release cycle
        run: |
          addToReleaseNote() {
            echo "${1}" >> ".github/RELEASE_NOTE"
          }

          echo -n "" > ".github/RELEASE_NOTE"
          addToReleaseNote "#### How to use"
          addToReleaseNote ""
          addToReleaseNote "Check the [Read Me](https://github.com/nadundesilva/k8s-replicator/tree/{{VERSION_TAG}}#how-to-use) for instructions on how to use the Operator."
          addToReleaseNote ""
          addToReleaseNote "#### Changelog:"
          addToReleaseNote ""
          addToReleaseNote "- "

          git add .github/RELEASE_NOTE
          git commit -m "[Automated] Preparing for next development iteration"
          git push origin main
